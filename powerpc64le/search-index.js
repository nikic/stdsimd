var N=null,E="",T="t",U="u",searchIndex={};
var r_Da="std_detect";
var r_Aa="vector_unsigned_long",r_Ba="vector_bool_long",r_Ca="vector_double",r_aa="core_arch",r_ba="vector_signed_short",r_ca="vector_float",r_da="vector_unsigned_char",r_ea="vector_signed_int",r_fa="Vector permute.",r_ga="result",r_ha="self",r_ia="try_from",r_ja="try_into",r_ka="borrow",r_la="borrow_mut",r_ma="type_id",r_na="typeid",r_oa="from",r_pa="into",r_qa="formatter",r_ra="fmt",r_sa="vector_signed_char",r_ta="clone",r_ua="vector_bool_char",r_va="vector_unsigned_short",r_wa="vector_bool_short",r_xa="vector_unsigned_int",r_ya="vector_bool_int",r_za="vector_signed_long";
searchIndex[r_Da]={"doc":"Run-time feature detection for the Rust standard library.","i":[[14,"is_x86_feature_detected",r_Da,"Prevents compilation if `is_x86_feature_detected` is used…",N,N],[14,"is_arm_feature_detected",E,"Prevents compilation if `is_arm_feature_detected` is used…",N,N],[14,"is_aarch64_feature_detected",E,"Prevents compilation if `is_aarch64_feature_detected` is…",N,N],[14,"is_powerpc_feature_detected",E,"Prevents compilation if `is_powerpc_feature_detected` is…",N,N],[14,"is_mips_feature_detected",E,"Prevents compilation if `is_mips_feature_detected` is used…",N,N],[14,"is_mips64_feature_detected",E,"Prevents compilation if `is_mips64_feature_detected` is…",N,N],[14,"is_powerpc64_feature_detected",E,"Checks if `powerpc64` feature is enabled.",N,N]],"p":[]};
searchIndex[r_aa]={"doc":"SIMD and vendor intrinsics module.","i":[[0,"powerpc64",r_aa,"Platform-specific intrinsics for the `PowerPC64` platform.",N,N],[3,r_sa,"core_arch::powerpc64","PowerPC-specific 128-bit wide vector of sixteen packed `i8`",N,N],[3,r_da,E,"PowerPC-specific 128-bit wide vector of sixteen packed `u8`",N,N],[3,r_ua,E,"PowerPC-specific 128-bit wide vector mask of sixteen…",N,N],[3,r_ba,E,"PowerPC-specific 128-bit wide vector of eight packed `i16`",N,N],[3,r_va,E,"PowerPC-specific 128-bit wide vector of eight packed `u16`",N,N],[3,r_wa,E,"PowerPC-specific 128-bit wide vector mask of eight packed…",N,N],[3,r_ea,E,"PowerPC-specific 128-bit wide vector of four packed `i32`",N,N],[3,r_xa,E,"PowerPC-specific 128-bit wide vector of four packed `u32`",N,N],[3,r_ya,E,"PowerPC-specific 128-bit wide vector mask of four packed…",N,N],[3,r_ca,E,"PowerPC-specific 128-bit wide vector of four packed `f32`",N,N],[3,r_za,E,"PowerPC-specific 128-bit wide vector of two packed `i64`",N,N],[3,r_Aa,E,"PowerPC-specific 128-bit wide vector of two packed `u64`",N,N],[3,r_Ba,E,"PowerPC-specific 128-bit wide vector mask of two elements",N,N],[3,r_Ca,E,"PowerPC-specific 128-bit wide vector of two packed `f64`",N,N],[5,"vec_add",E,"Vector add.",N,N],[5,"vec_madds",E,"Vector Multiply Add Saturated",N,[[[r_ba],[r_ba],[r_ba]],[r_ba]]],[5,"vec_mladd",E,"Vector Multiply Low and Add Unsigned Half Word",N,N],[5,"vec_mradds",E,"Vector Multiply Round and Add Saturated",N,[[[r_ba],[r_ba],[r_ba]],[r_ba]]],[5,"vec_msum",E,"Vector Multiply Sum",N,[[[T],["b"],[U]],[U]]],[5,"vec_msums",E,"Vector Multiply Sum Saturated",N,[[[T],[T],[U]],[U]]],[5,"vec_madd",E,"Vector Multiply Add",N,[[[r_ca],[r_ca],[r_ca]],[r_ca]]],[5,"vec_nmsub",E,"Vector Negative Multiply Subtract",N,[[[r_ca],[r_ca],[r_ca]],[r_ca]]],[5,"vec_sum4s",E,"Vector Sum Across Partial (1/4) Saturated",N,[[[T],[U]],[U]]],[5,"vec_perm",E,r_fa,N,[[[T],[T],[r_da]],[T]]],[5,"vec_sum2s",E,"Vector Sum Across Partial (1/2) Saturated",N,[[[r_ea],[r_ea]],[r_ea]]],[5,"vec_mule",E,"Vector Multiply Even",N,[[[T],[T]],[U]]],[5,"vec_mulo",E,"Vector Multiply Odd",N,[[[T],[T]],[U]]],[5,"vec_xxpermdi",E,r_fa,N,[[[T],[T],["u8"]],[T]]],[5,"trap",E,"Generates the trap instruction `TRAP`",N,N],[11,r_oa,E,E,0,[[[T]],[T]]],[11,r_ia,E,E,0,[[[U]],[r_ga]]],[11,r_ja,E,E,0,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,0,[[[r_ha]],[U]]],[11,r_ka,E,E,0,[[[r_ha]],[T]]],[11,r_la,E,E,0,[[[r_ha]],[T]]],[11,r_ma,E,E,0,[[[r_ha]],[r_na]]],[11,r_oa,E,E,1,[[[T]],[T]]],[11,r_ia,E,E,1,[[[U]],[r_ga]]],[11,r_ja,E,E,1,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,1,[[[r_ha]],[U]]],[11,r_ka,E,E,1,[[[r_ha]],[T]]],[11,r_la,E,E,1,[[[r_ha]],[T]]],[11,r_ma,E,E,1,[[[r_ha]],[r_na]]],[11,r_oa,E,E,2,[[[T]],[T]]],[11,r_ia,E,E,2,[[[U]],[r_ga]]],[11,r_ja,E,E,2,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,2,[[[r_ha]],[U]]],[11,r_ka,E,E,2,[[[r_ha]],[T]]],[11,r_la,E,E,2,[[[r_ha]],[T]]],[11,r_ma,E,E,2,[[[r_ha]],[r_na]]],[11,r_oa,E,E,3,[[[T]],[T]]],[11,r_ia,E,E,3,[[[U]],[r_ga]]],[11,r_ja,E,E,3,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,3,[[[r_ha]],[U]]],[11,r_ka,E,E,3,[[[r_ha]],[T]]],[11,r_la,E,E,3,[[[r_ha]],[T]]],[11,r_ma,E,E,3,[[[r_ha]],[r_na]]],[11,r_oa,E,E,4,[[[T]],[T]]],[11,r_ia,E,E,4,[[[U]],[r_ga]]],[11,r_ja,E,E,4,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,4,[[[r_ha]],[U]]],[11,r_ka,E,E,4,[[[r_ha]],[T]]],[11,r_la,E,E,4,[[[r_ha]],[T]]],[11,r_ma,E,E,4,[[[r_ha]],[r_na]]],[11,r_oa,E,E,5,[[[T]],[T]]],[11,r_ia,E,E,5,[[[U]],[r_ga]]],[11,r_ja,E,E,5,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,5,[[[r_ha]],[U]]],[11,r_ka,E,E,5,[[[r_ha]],[T]]],[11,r_la,E,E,5,[[[r_ha]],[T]]],[11,r_ma,E,E,5,[[[r_ha]],[r_na]]],[11,r_oa,E,E,6,[[[T]],[T]]],[11,r_ia,E,E,6,[[[U]],[r_ga]]],[11,r_ja,E,E,6,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,6,[[[r_ha]],[U]]],[11,r_ka,E,E,6,[[[r_ha]],[T]]],[11,r_la,E,E,6,[[[r_ha]],[T]]],[11,r_ma,E,E,6,[[[r_ha]],[r_na]]],[11,r_oa,E,E,7,[[[T]],[T]]],[11,r_ia,E,E,7,[[[U]],[r_ga]]],[11,r_ja,E,E,7,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,7,[[[r_ha]],[U]]],[11,r_ka,E,E,7,[[[r_ha]],[T]]],[11,r_la,E,E,7,[[[r_ha]],[T]]],[11,r_ma,E,E,7,[[[r_ha]],[r_na]]],[11,r_oa,E,E,8,[[[T]],[T]]],[11,r_ia,E,E,8,[[[U]],[r_ga]]],[11,r_ja,E,E,8,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,8,[[[r_ha]],[U]]],[11,r_ka,E,E,8,[[[r_ha]],[T]]],[11,r_la,E,E,8,[[[r_ha]],[T]]],[11,r_ma,E,E,8,[[[r_ha]],[r_na]]],[11,r_oa,E,E,9,[[[T]],[T]]],[11,r_ia,E,E,9,[[[U]],[r_ga]]],[11,r_ja,E,E,9,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,9,[[[r_ha]],[U]]],[11,r_ka,E,E,9,[[[r_ha]],[T]]],[11,r_la,E,E,9,[[[r_ha]],[T]]],[11,r_ma,E,E,9,[[[r_ha]],[r_na]]],[11,r_oa,E,E,10,[[[T]],[T]]],[11,r_ia,E,E,10,[[[U]],[r_ga]]],[11,r_ja,E,E,10,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,10,[[[r_ha]],[U]]],[11,r_ka,E,E,10,[[[r_ha]],[T]]],[11,r_la,E,E,10,[[[r_ha]],[T]]],[11,r_ma,E,E,10,[[[r_ha]],[r_na]]],[11,r_oa,E,E,11,[[[T]],[T]]],[11,r_ia,E,E,11,[[[U]],[r_ga]]],[11,r_ja,E,E,11,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,11,[[[r_ha]],[U]]],[11,r_ka,E,E,11,[[[r_ha]],[T]]],[11,r_la,E,E,11,[[[r_ha]],[T]]],[11,r_ma,E,E,11,[[[r_ha]],[r_na]]],[11,r_oa,E,E,12,[[[T]],[T]]],[11,r_ia,E,E,12,[[[U]],[r_ga]]],[11,r_ja,E,E,12,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,12,[[[r_ha]],[U]]],[11,r_ka,E,E,12,[[[r_ha]],[T]]],[11,r_la,E,E,12,[[[r_ha]],[T]]],[11,r_ma,E,E,12,[[[r_ha]],[r_na]]],[11,r_oa,E,E,13,[[[T]],[T]]],[11,r_ia,E,E,13,[[[U]],[r_ga]]],[11,r_ja,E,E,13,[[[r_ha]],[r_ga]]],[11,r_pa,E,E,13,[[[r_ha]],[U]]],[11,r_ka,E,E,13,[[[r_ha]],[T]]],[11,r_la,E,E,13,[[[r_ha]],[T]]],[11,r_ma,E,E,13,[[[r_ha]],[r_na]]],[11,r_ra,E,E,0,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,1,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,2,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,3,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,4,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,5,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,6,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,7,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,8,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,9,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,10,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,11,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,12,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ra,E,E,13,[[[r_ha],[r_qa]],[r_ga]]],[11,r_ta,E,E,0,[[[r_ha]],[r_sa]]],[11,r_ta,E,E,1,[[[r_ha]],[r_da]]],[11,r_ta,E,E,2,[[[r_ha]],[r_ua]]],[11,r_ta,E,E,3,[[[r_ha]],[r_ba]]],[11,r_ta,E,E,4,[[[r_ha]],[r_va]]],[11,r_ta,E,E,5,[[[r_ha]],[r_wa]]],[11,r_ta,E,E,6,[[[r_ha]],[r_ea]]],[11,r_ta,E,E,7,[[[r_ha]],[r_xa]]],[11,r_ta,E,E,8,[[[r_ha]],[r_ya]]],[11,r_ta,E,E,9,[[[r_ha]],[r_ca]]],[11,r_ta,E,E,10,[[[r_ha]],[r_za]]],[11,r_ta,E,E,11,[[[r_ha]],[r_Aa]]],[11,r_ta,E,E,12,[[[r_ha]],[r_Ba]]],[11,r_ta,E,E,13,[[[r_ha]],[r_Ca]]]],"p":[[3,r_sa],[3,r_da],[3,r_ua],[3,r_ba],[3,r_va],[3,r_wa],[3,r_ea],[3,r_xa],[3,r_ya],[3,r_ca],[3,r_za],[3,r_Aa],[3,r_Ba],[3,r_Ca]]};
initSearch(searchIndex);addSearchOptions(searchIndex);